name: CI/CD

on:
  pull_request:
  push:

jobs:
  linting_testing_publish:
    runs-on: ubuntu-latest
    name: Lint code, run tests and push image
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install dependencies
        run: |
          nix-shell --run "just libs-install"

      - name: Lint Python code
        run: |
          nix-shell
          echo 'TODO python lint'

      - name: Lint Helm chart
        run: |
          nix-shell --run "helm lint helm/"

      - name: Hadolint Dockerfile
        run: |
          nix-shell --run "hadolint Dockerfile"

      - name: Execute unit tests
        run: |
          nix-shell --run "echo 'TODO python unit tests'"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: tpham
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Kind cluster and Deploy Helm Chart
        run: |
          nix-shell --run "just start"

      - name: Execute E2E tests
        env:
          ASPIC_API_KEY: ${{ secrets.ASPIC_API_KEY }}
        run: |
          nix-shell --run "just e2e"

      - uses: nelonoel/branch-name@v1.0.1
      - name: Prepare
        id: prep
        run: |
          TAG=$(echo ${{ env.BRANCH_NAME }} | sed -r 's#/+#-#g')
          echo ::set-output name=tag::${TAG}

      # :latest is always a tag of the current branch
      - name: Use Docker image built before E2E tests
        run: docker tag tpham/aspic-operator:latest tpham/aspic-operator:${{ steps.prep.outputs.tag }}

      - name: Push Docker image for branch
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: docker push tpham/aspic-operator:${{ steps.prep.outputs.tag }}

      - name: Push Docker image for tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push' }}
        run: |
          docker tag tpham/aspic-operator:latest tpham/aspic-operator:${GITHUB_REF##*/}
          docker push tpham/aspic-operator:latest
          docker push tpham/aspic-operator:${GITHUB_REF##*/}
