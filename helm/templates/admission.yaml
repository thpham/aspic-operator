{{- if eq .Values.env.PROFILE "prod" }}
# ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: webhook.aspic.io
  labels:
    {{- include "aspic-operator.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from: "{{ .Release.Namespace }}/operator-webhook"
    service.beta.openshift.io/inject-cabundle: "true"
webhooks:
- name: update-streams.webhook.aspic.io
  failurePolicy: Fail
  matchPolicy: Equivalent
  admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    #caBundle: # will be injected automatically by certmanager or Openshift service-ca
    service:
      name: {{ include "aspic-operator.fullname" . }}
      namespace: {{ .Release.Namespace }}
      port: {{ .Values.service.port }}
      path: /update-streams
    #url: https://host:port/path
  namespaceSelector: {}
  objectSelector: {}
  rules:
  - apiGroups: ["config.aspic.io"]
    apiVersions: ["v1beta1"]
    operations: ["CREATE"]
    resources: ["update-streams"]
    scope: "*"
  sideEffects: None
  timeoutSeconds: 30
---
# The MutatingWebhookConfiguration is defined here just so the mutating webhooks
# set up by the controller agent (kopf sets them up even if we don't specify
# any) are deleted when PaV is uninstalled.
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.aspic.io
  labels:
    {{- include "aspic-operator.labels" . | nindent 4 }}
  annotations:
    cert-manager.io/inject-ca-from: "{{ .Release.Namespace }}/operator-webhook"
    service.beta.openshift.io/inject-cabundle: "true"
webhooks:
- name: mutate-pods.webhook.aspic.io
  failurePolicy: Fail
  matchPolicy: Equivalent
  admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    #caBundle: # will be injected automatically by certmanager or Openshift service-ca
    service:
      name: {{ include "aspic-operator.fullname" . }}
      namespace: {{ .Release.Namespace }}
      port: {{ .Values.service.port }}
      path: /mutate-pods
    #url: https://host:port/path
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: "NotIn"
      values:
      - {{ .Release.Namespace }}
  objectSelector:
    matchExpressions:
    - key: config.aspic.io/managed
      operator: In
      values:
      - "true"
  reinvocationPolicy: Never
  rules:
  - apiGroups: [""]
    apiVersions: ["v1"]
    operations: ["CREATE"]
    resources: ["pods"]
    scope: "*"
  sideEffects: None
  timeoutSeconds: 30
{{- end }}