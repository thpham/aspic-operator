apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aspic-operator.fullname" . }}
  labels:
    {{- include "aspic-operator.labels" . | nindent 4 }}
spec:
  # reason: https://kopf.readthedocs.io/en/stable/deployment/#cluster-deployment
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "aspic-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aspic-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aspic-operator.serviceAccountName" . }}
      automountServiceAccountToken: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - python
            - main.py
          args:
            - operator
            {{- if .Values.api.enabled }}
            - --api
            {{- end }}
          env:
            - name: ASPIC_OPERATOR_WATCH_NAMESPACES
              {{- if .Values.watchAnyNamespace }}
              value: "*"
              {{- else }}
              {{- if .Values.watchNamespaces -}}
              {{- $ns := .Values.watchNamespaces -}}
              {{- $ns := append $ns .Release.Namespace }}
              value: "{{ join "," $ns }}"
              {{- else }}
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
              {{- end }}
              {{- end }}
            {{- range $name, $value := .Values.env }}
            - name: {{ $name | quote }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
            - name: operator
              containerPort: 8181
              protocol: TCP
            - name: webhook
              containerPort: 8282
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              {{- if .Values.api.enabled }}
              port: api
              {{- else }}
              port: operator
              {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              {{- if .Values.api.enabled }}
              port: api
              {{- else }}
              port: operator
              {{- end }}
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: certs
              mountPath: /var/aspic/certs
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.openshift.enabled }}
        - name: certs
          projected:
            sources:
              - configMap:
                  name: openshift-service-ca.crt
                  items:
                  - key: service-ca.crt
                    path: ca.crt
              - secret:
                  name: operator-webhook-cert
                  items:
                  - key: tls.crt
                    path: tls.crt
                  - key: tls.key
                    path: tls.key
      {{- else }}
        - name: certs
          secret:
            secretName: operator-webhook-cert
      {{- end }}
